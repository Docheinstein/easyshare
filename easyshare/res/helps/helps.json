{
   "help": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nhelp - show the help of a command</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nhelp <A> # just for alignment\n<b>help</b> [<u>COMMAND</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nShow the help of COMMAND if specified, or show the list of commands if no COMMAND is given.\n\nAvailable commands are:\n    :\n    ::\n    c\n    cd\n    close\n    connect\n    cp\n    disconnect\n    du\n    exec\n    exit\n    f\n    find\n    g\n    get\n    h\n    help\n    i\n    info\n    l\n    list\n    ls\n    mkdir\n    mv\n    o\n    open\n    p\n    ping\n    put\n    pwd\n    q\n    quit\n    rcd\n    rcp\n    rdu\n    rexec\n    rf\n    rfind\n    rl\n    rls\n    rm\n    rmkdir\n    rmv\n    rpwd\n    rrm\n    rsh\n    rshell\n    rtree\n    s\n    scan\n    sh\n    shell\n    t\n    trace\n    tree\n    v\n    verbose</a></i4>",
   "h": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nhelp - show the help of a command</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nhelp <A> # just for alignment\n<b>help</b> [<u>COMMAND</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nShow the help of COMMAND if specified, or show the list of commands if no COMMAND is given.\n\nAvailable commands are:\n    :\n    ::\n    c\n    cd\n    close\n    connect\n    cp\n    disconnect\n    du\n    exec\n    exit\n    f\n    find\n    g\n    get\n    h\n    help\n    i\n    info\n    l\n    list\n    ls\n    mkdir\n    mv\n    o\n    open\n    p\n    ping\n    put\n    pwd\n    q\n    quit\n    rcd\n    rcp\n    rdu\n    rexec\n    rf\n    rfind\n    rl\n    rls\n    rm\n    rmkdir\n    rmv\n    rpwd\n    rrm\n    rsh\n    rshell\n    rtree\n    s\n    scan\n    sh\n    shell\n    t\n    trace\n    tree\n    v\n    verbose</a></i4>",
   "exit": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nexit - exit from the interactive shell</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\n<b>exit</b>\n<b>quit</b>\n<b>q</b></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nExit from the interactive shell.\n\nOpen connections are automatically closed.</a></i4>",
   "quit": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nexit - exit from the interactive shell</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\n<b>exit</b>\n<b>quit</b>\n<b>q</b></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nExit from the interactive shell.\n\nOpen connections are automatically closed.</a></i4>",
   "q": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nexit - exit from the interactive shell</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\n<b>exit</b>\n<b>quit</b>\n<b>q</b></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nExit from the interactive shell.\n\nOpen connections are automatically closed.</a></i4>",
   "trace": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ntrace - enable/disable packet tracing</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\ntrace <A> # just for alignment\n<b>trace</b> <a>[<u>LEVEL</u>]</a>\n<b>t</b>     <a>[<u>LEVEL</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nChange the tracing level to <u>LEVEL</u> (default is <u>0</u>, which is disabled).\nWhen tracing is enabled, packets sent and received to and from the server for any operation are shown.\n\nThe allowed values of <u>LEVEL</u> are:\n<u>0</u>        disabled (default)\n<u>1</u>        text\n<u>2</u>        binary payloads\n<u>3</u>        binary all (payload + header)\n\nIf no argument is given, increase the tracing level or resets it to <u>0</u> if it exceeds the maximum.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nTO DO</a></i4>",
   "t": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ntrace - enable/disable packet tracing</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\ntrace <A> # just for alignment\n<b>trace</b> <a>[<u>LEVEL</u>]</a>\n<b>t</b>     <a>[<u>LEVEL</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nChange the tracing level to <u>LEVEL</u> (default is <u>0</u>, which is disabled).\nWhen tracing is enabled, packets sent and received to and from the server for any operation are shown.\n\nThe allowed values of <u>LEVEL</u> are:\n<u>0</u>        disabled (default)\n<u>1</u>        text\n<u>2</u>        binary payloads\n<u>3</u>        binary all (payload + header)\n\nIf no argument is given, increase the tracing level or resets it to <u>0</u> if it exceeds the maximum.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nTO DO</a></i4>",
   "verbose": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nverbose - change verbosity level</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nverbose <A> # just for alignment\n<b>verbose</b> <a>[<u>LEVEL</u>]</a>\n<b>v</b>       <a>[<u>LEVEL</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nChange the verbosity level to <u>LEVEL</u> (default is <u>0</u>, which is disabled).\n\nThe messages are written to stdout.\n\nThe allowed values of <u>LEVEL</u> are:\n<u>0</u>        disabled (default)\n<u>1</u>        errors\n<u>2</u>        warnings\n<u>3</u>        info\n<u>4</u>        debug\n<u>5</u>        internal libraries\n\nIf no argument is given, increase the verbosity or resets it to <u>0</u> if it exceeds the maximum.</a></i4>",
   "v": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nverbose - change verbosity level</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nverbose <A> # just for alignment\n<b>verbose</b> <a>[<u>LEVEL</u>]</a>\n<b>v</b>       <a>[<u>LEVEL</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nChange the verbosity level to <u>LEVEL</u> (default is <u>0</u>, which is disabled).\n\nThe messages are written to stdout.\n\nThe allowed values of <u>LEVEL</u> are:\n<u>0</u>        disabled (default)\n<u>1</u>        errors\n<u>2</u>        warnings\n<u>3</u>        info\n<u>4</u>        debug\n<u>5</u>        internal libraries\n\nIf no argument is given, increase the verbosity or resets it to <u>0</u> if it exceeds the maximum.</a></i4>",
   "pwd": "<b>COMMAND</b>\n<I4>\n<A> # alignment\npwd - show the name of current local working directory</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\n<b>pwd</b></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nShow the name of current local working directory.\n\nThe local working directory can be changed with the command <b>cd</b>.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rpwd</b>\" for the remote analogous.</a></i4>",
   "ls": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nls - list local directory content</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nls <A> # just for alignment\n<b>ls</b> [<u>OPTION</u>]... [<u>DIR</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nList content of the local <u>DIR</u> or the current local directory if no <u>DIR</u> is specified.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                   <A> # alignment\n<b>-a</b>, <b>--all</b>          show hidden files too\n<b>-g</b>, <b>--group</b>        group by file type\n<b>-l</b>                 show more details\n<b>-r</b>, <b>--reverse</b>      reverse sort order\n<b>-S</b>                 show files size\n<b>-s</b>, <b>--sort-size</b>    sort by size</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rls</b>\" for the remote analogous.</a></i4>",
   "l": "alias for ls -la",
   "tree": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ntree - list local directory contents in a tree-like format</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\ntree <A> # just for alignment\n<b>tree</b> [<u>OPTION</u>]... [<u>DIR</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nList recursively, in a tree-like format, the local <u>DIR</u> or the current local directory if no <u>DIR</u> is specified.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                     <A> # alignment\n<b>-a</b>, <b>--all</b>            show hidden files too\n<b>-d</b>, <b>--depth</b>  <u>depth</u>   maximum display depth of tree\n<b>-g</b>, <b>--group</b>          group by file type\n<b>-l</b>                   show more details\n<b>-r</b>, <b>--reverse</b>        reverse sort order\n<b>-S</b>                   show files size\n<b>-s</b>, <b>--sort-size</b>      sort by size</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\n\n<b>/tmp></b> tree\n|-- dir\n|   |-- f1\n|   +-- f2\n|-- f1\n+-- f2</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rtree</b>\" for the remote analogous.</a></i4>",
   "find": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nfind - search for local files</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nfind <A> # just for alignment\n<b>find</b> [<u>OPTION</u>]... [<u>DIR</u>]</a>\n<b>f</b> [<u>OPTION</u>]... [<u>DIR</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nSearch for files and directories based on the given filters the local <u>DIR</u>, or the current local directory if no <u>DIR</u> is specified.\n\nEach result of <b>find</b> is memorized and can be used further with any command that accept local paths by specifying the identifier shown by <b>find</b>.\nFor instance, you can search a file by name (i.e. <b>find</b> <b>-n</b> <u>usefulname</u>) and then perform a local action over it (e.g. <b>rm</b> $a1) or even a transfer action (e.g. <b>put</b> $a1).</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                       <A> # alignment\n<b>-i</b>, <b>--insensitive</b>      make filename filtering case insensitive\n<b>-l</b>                     show more details\n<b>-n</b>, <b>--name</b>  <u>pattern</u>    filter by filename\n<b>-r</b>, <b>--regex</b>  <u>pattern</u>   filter by filename using regular expression\n<b>-t</b>, <b>--type</b>  <u>ftype</u>      filter by file type</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. List current local directory (no filters)</a>\n<b>/tmp></b> <b>find</b>\n$a1 FILE2\n$a2 dir1\n$a3 dir1/file\n$a4 dir2\n$a5 file1\n   <a>\n2. List local directory (no filters)</a>\n<b>/tmp></b> <b>find</b> dir1\n$b3 dir1/file\n   <a>\n3. Finding by name</a>\n<b>/tmp></b> <b>find</b> <b>-n</b> <u>file</u>\n$c1 dir1/file\n$c2 file1\n   <a>\n4. Finding by name, case insensitive</a>\n<b>/tmp></b> <b>find</b> <b>-in</b> <u>file</u>\n$d1 FILE2\n$d2 dir1/file\n$d3 file1\n   <a>\n5. Finding by regex</a>\n<b>/tmp></b> <b>find</b> <b>-r</b> <u>file[0-9]</u>\n$e1 file1\n   <a>\n6. Finding by regex, case insensitive</a>\n<b>/tmp></b> <b>find</b> <b>-ir</b> <u>file[0-9]</u>\n$f1 FILE2\n$f2 file1   \n    <a>\n7. Finding by name, files only</a>\n<b>/tmp></b> <b>find</b> <b>-in</b> <u>dir1</u> <b>-t</b> <u>f</u>\n$g1 dir1/file</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rfind</b>\" for the remote analogous.</a></i4>",
   "f": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nfind - search for local files</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nfind <A> # just for alignment\n<b>find</b> [<u>OPTION</u>]... [<u>DIR</u>]</a>\n<b>f</b> [<u>OPTION</u>]... [<u>DIR</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nSearch for files and directories based on the given filters the local <u>DIR</u>, or the current local directory if no <u>DIR</u> is specified.\n\nEach result of <b>find</b> is memorized and can be used further with any command that accept local paths by specifying the identifier shown by <b>find</b>.\nFor instance, you can search a file by name (i.e. <b>find</b> <b>-n</b> <u>usefulname</u>) and then perform a local action over it (e.g. <b>rm</b> $a1) or even a transfer action (e.g. <b>put</b> $a1).</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                       <A> # alignment\n<b>-i</b>, <b>--insensitive</b>      make filename filtering case insensitive\n<b>-l</b>                     show more details\n<b>-n</b>, <b>--name</b>  <u>pattern</u>    filter by filename\n<b>-r</b>, <b>--regex</b>  <u>pattern</u>   filter by filename using regular expression\n<b>-t</b>, <b>--type</b>  <u>ftype</u>      filter by file type</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. List current local directory (no filters)</a>\n<b>/tmp></b> <b>find</b>\n$a1 FILE2\n$a2 dir1\n$a3 dir1/file\n$a4 dir2\n$a5 file1\n   <a>\n2. List local directory (no filters)</a>\n<b>/tmp></b> <b>find</b> dir1\n$b3 dir1/file\n   <a>\n3. Finding by name</a>\n<b>/tmp></b> <b>find</b> <b>-n</b> <u>file</u>\n$c1 dir1/file\n$c2 file1\n   <a>\n4. Finding by name, case insensitive</a>\n<b>/tmp></b> <b>find</b> <b>-in</b> <u>file</u>\n$d1 FILE2\n$d2 dir1/file\n$d3 file1\n   <a>\n5. Finding by regex</a>\n<b>/tmp></b> <b>find</b> <b>-r</b> <u>file[0-9]</u>\n$e1 file1\n   <a>\n6. Finding by regex, case insensitive</a>\n<b>/tmp></b> <b>find</b> <b>-ir</b> <u>file[0-9]</u>\n$f1 FILE2\n$f2 file1   \n    <a>\n7. Finding by name, files only</a>\n<b>/tmp></b> <b>find</b> <b>-in</b> <u>dir1</u> <b>-t</b> <u>f</u>\n$g1 dir1/file</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rfind</b>\" for the remote analogous.</a></i4>",
   "du": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ndu - estimate disk usage of local files</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\ndu <A> # just for alignment\n<b>du</b> <u>FILE</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nEstimate the disk usage of <u>FILE</u> (which could be either a file or a directory).\nIf <u>FILE</u> is not specified, the disk usage of the current local directory is estimated instead.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n               <A> # alignment\n<b>-h</b>, <b>--human</b>    print size in human readable format (e.g. 17K)</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rdu</b>\" for the remote analogous.</a></i4>",
   "cd": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ncd - change local working directory</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\ncd <A> # just for alignment\n<b>cd</b> [<u>DIR</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nChange the current local working directory to <u>DIR</u> or to the user's home directory if <u>DIR</u> is not specified.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rcd</b>\" for the remote analogous.</a></i4>",
   "mkdir": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nmkdir - create a local directory</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nmkdir <A> # just for alignment\n<b>mkdir</b> <u>DIR</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nCreate the local directory <u>DIR</u>.\n\nParent directories of <u>DIR</u> are automatically created when needed.\n\nIf <u>DIR</u> already exists, it does nothing.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rmkdir</b>\" for the remote analogous.</a></i4>",
   "cp": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ncp - copy files and directories locally</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\ncp <A> # just for alignment\n<b>cp</b> <u>SOURCE</u> <u>DEST</u>\n<b>cp</b> <u>SOURCE</u>... <u>DIR</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nCopy local <u>SOURCE</u> file or directory to <u>DEST</u>, or copy multiple </u>SOURCE</u>s to the directory <u>DIR</u>.\n\nIf used with two arguments as \"<b>cp</b> <u>SOURCE</u> <u>DEST</u>\" the following rules are applied:\n  <a>\n- If <u>DEST</u> doesn't exists, <u>SOURCE</u> will copied as <u>DEST</u>\n- If <u>DEST</u> exists and it is a directory, <u>SOURCE</u> will be copied into <u>DEST</u>\n- If <u>DEST</u> exists and it is a file, <u>SOURCE</u> must be a file and it will overwrite <u>DEST</u>\n  </a>\nIf used with at least arguments as \"<b>cp</b> <u>SOURCE</u>... <u>DIR</u>\" then <u>DIR</u> must be an existing directory and <u>SOURCE</u>s will be copied into it.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rcp</b>\" for the remote analogous.</a></i4>",
   "mv": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nmv - move files and directories locally</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nmv <A> # just for alignment\n<b>mv</b> <u>SOURCE</u> <u>DEST</u>\n<b>mv</b> <u>SOURCE</u>... <u>DIR</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nMove local <u>SOURCE</u> file or directory to <u>DEST</u>, or move multiple </u>SOURCE</u>s to the directory <u>DIR</u>.\n\nIf used with two arguments as \"<b>mv</b> <u>SOURCE</u> <u>DEST</u>\" the following rules are applied:\n  <a>\n- If <u>DEST</u> doesn't exists, <u>SOURCE</u> will moved as <u>DEST</u>\n- If <u>DEST</u> exists and it is a directory, <u>SOURCE</u> will be moved into <u>DEST</u>\n- If <u>DEST</u> exists and it is a file, <u>SOURCE</u> must be a file and it will overwrite <u>DEST</u>\n  </a>\nIf used with at least arguments as \"<b>mv</b> <u>SOURCE</u>... <u>DIR</u>\" then <u>DIR</u> must be an existing directory and <u>SOURCE</u>s will be moved into it.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rmv</b>\" for the remote analogous.</a></i4>",
   "rm": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrm - remove files and directories locally</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrm <A> # just for alignment\n<b>rm</b> [FILE]...</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nRemove local <u>FILE</u>s.\n\nIf a <u>FILE</u> is a directory, it will be removed recursively.\n\nIf a <u>FILE</u> does not exists, it will be ignored.\n\nThis commands never prompts: essentially acts like unix's rm -rf.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rrm</b>\" for the remote analogous.</a></i4>",
   "exec": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nexec - execute an arbitrary command locally</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nexec <A> # just for alignment\n<b>exec</b> <u>COMMAND</u>\n<b>:</b>    <u>COMMAND</u>\n<b>:</b>    <u>COMMAND</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nExecutes an arbitrary <u>COMMAND</u> locally.\n\nThe <u>COMMAND</u> is executed via the shell and therefore allows all the shell features (e.g. variables, glob expansions, redirection).\n\nThis might be useful for execute commands without exiting the easyshare's shell.\n\nThe command can be run either with \"<b>exec</b> <u>COMMAND</u>\",  \"<b>:</b> <u>COMMAND</u>\" or \"<b>:</b><u>COMMAND</u>\".\n\nCurrently supported only for Unix.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> ls\nf1      f2\n<b>/tmp></b> <b>exec</b> <u>touch f3</u>\nf1      f2      f3\n<b>/tmp></b> <b>:</b> <u>echo \"hello\" > f3</u>\n<b>/tmp></b> <b>:</b><u>cat f3</u>\nhello</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rexec</b>\" for the remote analogous.</a></i4>",
   ":": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nexec - execute an arbitrary command locally</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nexec <A> # just for alignment\n<b>exec</b> <u>COMMAND</u>\n<b>:</b>    <u>COMMAND</u>\n<b>:</b>    <u>COMMAND</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nExecutes an arbitrary <u>COMMAND</u> locally.\n\nThe <u>COMMAND</u> is executed via the shell and therefore allows all the shell features (e.g. variables, glob expansions, redirection).\n\nThis might be useful for execute commands without exiting the easyshare's shell.\n\nThe command can be run either with \"<b>exec</b> <u>COMMAND</u>\",  \"<b>:</b> <u>COMMAND</u>\" or \"<b>:</b><u>COMMAND</u>\".\n\nCurrently supported only for Unix.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> ls\nf1      f2\n<b>/tmp></b> <b>exec</b> <u>touch f3</u>\nf1      f2      f3\n<b>/tmp></b> <b>:</b> <u>echo \"hello\" > f3</u>\n<b>/tmp></b> <b>:</b><u>cat f3</u>\nhello</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rexec</b>\" for the remote analogous.</a></i4>",
   "shell": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nshell - start a local shell</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nshell <A> # just for alignment\n<b>shell</b>\n<b>sh</b></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nStart a local shell using the user's preferred shell.\nDifferently from exec, this really opens a pseudo terminal (ssh style).\n\nCurrently supported only for Unix.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rshell</b>\" for the remote analogous.</a></i4>",
   "sh": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nshell - start a local shell</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nshell <A> # just for alignment\n<b>shell</b>\n<b>sh</b></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nStart a local shell using the user's preferred shell.\nDifferently from exec, this really opens a pseudo terminal (ssh style).\n\nCurrently supported only for Unix.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rshell</b>\" for the remote analogous.</a></i4>",
   "rpwd": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrpwd - show the name of current remote working directory</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\n<b>rpwd</b></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nShow the name of current remote working directory.\n\nThe remote working directory can be changed with the command <b>rcd</b>.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help pwd</b>\" for the local analogous.</a></i4>",
   "rls": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrls - list remote directory content</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrls <A> # just for alignment\n<b>rls</b> [<u>OPTION</u>]... [<u>DIR</u>]\n\n<b>rls</b> [<u>OPTION</u>]... [<u>SHARING_LOCATION</u>] [<u>DIR</u>]</a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nList content of the remote <u>DIR</u> or the current remote directory if no <u>DIR</u> is specified.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                   <A> # alignment\n<b>-a</b>, <b>--all</b>          show hidden files too\n<b>-g</b>, <b>--group</b>        group by file type\n<b>-l</b>                 show more details\n<b>-r</b>, <b>--reverse</b>      reverse sort order\n<b>-S</b>                 show files size\n<b>-s</b>, <b>--sort-size</b>    sort by size</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help ls</b>\" for the local analogous.</a></i4>",
   "rl": "alias for rls -la",
   "rtree": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrtree - list remote directory contents in a tree-like format</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrtree <A> # just for alignment\n<b>rtree</b> [<u>OPTION</u>]... [<u>DIR</u>]\n\n<b>rtree</b> [<u>OPTION</u>]... [<u>SHARING_LOCATION</u>] [<u>DIR</u>]</a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nList recursively, in a tree-like format, the remote <u>DIR</u> or the current remote directory if no <u>DIR</u> is specified</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                     <A> # alignment\n<b>-a</b>, <b>--all</b>            show hidden files too\n<b>-d</b>, <b>--depth</b>  <u>depth</u>   maximum display depth of tree\n<b>-g</b>, <b>--group</b>          group by file type\n<b>-l</b>                   show more details\n<b>-r</b>, <b>--reverse</b>        reverse sort order\n<b>-S</b>                   show files size\n<b>-s</b>, <b>--sort-size</b>      sort by size</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\n<b>bob-debian.music:/</b> - <b>/tmp></b> rtree\n|-- dir\n|   |-- f1\n|   +-- f2\n|-- f1\n+-- f2</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help tree</b>\" for the local analogous.</a></i4>",
   "rfind": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrfind - search for remote files</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrfind <A> # just for alignment\n<b>rfind</b> [<u>OPTION</u>]... [<u>DIR</u>]</a>\n<b>rf</b> [<u>OPTION</u>]... [<u>DIR</u>]</a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nSearch for files and directories based on the given filters the remote <u>DIR</u>, or the current remote directory if no <u>DIR</u> is specified.\n\nEach result of <b>rfind</b> is memorized and can be used further with any command that accept local paths by specifying the identifier shown by <b>find</b>.\nFor instance, you can search a file by name (i.e. <b>find</b> <b>-n</b> <u>usefulname</u>) and then perform a local action over it (e.g. <b>rrm</b> $a1) or even a transfer action (e.g. <b>get</b> $a1).</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                       <A> # alignment\n<b>-i</b>, <b>--insensitive</b>      make filename filtering case insensitive\n<b>-l</b>                     show more details\n<b>-n</b>, <b>--name</b>  <u>pattern</u>    filter by filename\n<b>-r</b>, <b>--regex</b>  <u>pattern</u>   filter by filename using regular expression\n<b>-t</b>, <b>--type</b>  <u>ftype</u>      filter by file type</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. List current remote directory (no filters)</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b>\n$a1 FILE2\n$a2 dir1\n$a3 dir1/file\n$a4 dir2\n$a5 file1\n   <a>\n2. List remote directory (no filters)</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> dir1\n$b3 dir1/file\n   <a>\n3. Finding by name</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-n</b> <u>file</u>\n$c1 dir1/file\n$c2 file1\n   <a>\n4. Finding by name, case insensitive</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-in</b> <u>file</u>\n$d1 FILE2\n$d2 dir1/file\n$d3 file1\n   <a>\n5. Finding by regex</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-r</b> <u>file[0-9]</u>\n$e1 file1\n   <a>\n6. Finding by regex, case insensitive</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-ir</b> <u>file[0-9]</u>\n$f1 FILE2\n$f2 file1   \n    <a>\n7. Finding by name, files only</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-in</b> <u>dir1</u> <b>-t</b> <u>f</u>\n$g1 dir1/file</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help find</b>\" for the local analogous.</a></i4>",
   "rf": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrfind - search for remote files</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrfind <A> # just for alignment\n<b>rfind</b> [<u>OPTION</u>]... [<u>DIR</u>]</a>\n<b>rf</b> [<u>OPTION</u>]... [<u>DIR</u>]</a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nSearch for files and directories based on the given filters the remote <u>DIR</u>, or the current remote directory if no <u>DIR</u> is specified.\n\nEach result of <b>rfind</b> is memorized and can be used further with any command that accept local paths by specifying the identifier shown by <b>find</b>.\nFor instance, you can search a file by name (i.e. <b>find</b> <b>-n</b> <u>usefulname</u>) and then perform a local action over it (e.g. <b>rrm</b> $a1) or even a transfer action (e.g. <b>get</b> $a1).</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                       <A> # alignment\n<b>-i</b>, <b>--insensitive</b>      make filename filtering case insensitive\n<b>-l</b>                     show more details\n<b>-n</b>, <b>--name</b>  <u>pattern</u>    filter by filename\n<b>-r</b>, <b>--regex</b>  <u>pattern</u>   filter by filename using regular expression\n<b>-t</b>, <b>--type</b>  <u>ftype</u>      filter by file type</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. List current remote directory (no filters)</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b>\n$a1 FILE2\n$a2 dir1\n$a3 dir1/file\n$a4 dir2\n$a5 file1\n   <a>\n2. List remote directory (no filters)</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> dir1\n$b3 dir1/file\n   <a>\n3. Finding by name</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-n</b> <u>file</u>\n$c1 dir1/file\n$c2 file1\n   <a>\n4. Finding by name, case insensitive</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-in</b> <u>file</u>\n$d1 FILE2\n$d2 dir1/file\n$d3 file1\n   <a>\n5. Finding by regex</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-r</b> <u>file[0-9]</u>\n$e1 file1\n   <a>\n6. Finding by regex, case insensitive</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-ir</b> <u>file[0-9]</u>\n$f1 FILE2\n$f2 file1   \n    <a>\n7. Finding by name, files only</a>\n<b>bob-debian.shared:/</b> - <b>/tmp></b> <b>find</b> <b>-in</b> <u>dir1</u> <b>-t</b> <u>f</u>\n$g1 dir1/file</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help find</b>\" for the local analogous.</a></i4>",
   "rdu": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrdu - estimate disk usage of remote files</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrdu <A> # just for alignment\n<b>rdu</b> [<u>FILE</u>]</a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nEstimate the disk usage of <u>FILE</u> (which could be either a file or a directory).\nIf <u>FILE</u> is not specified, the disk usage of the current remote directory is estimated instead.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n               <A> # alignment\n<b>-h</b>, <b>--human</b>    print size in human readable format (e.g. 17K)</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help du</b>\" for the remote analogous.</a></i4>",
   "rcd": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrcd - change remote working directory</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrcd <A> # just for alignment\n<b>rcd</b> [<u>DIR</u>]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nChange the current remote working directory to <u>DIR</u> or to the root of the current sharing if no <u>DIR</u> is specified.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rcd</b> <u>dir</u>\n<b>bob-debian.music:/dir</b> - <b>/tmp></b> <b>rcd</b> <u>subdir</u>\n<b>bob-debian.music:/dir/subdir</b> - <b>/tmp></b></a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help cd</b>\" for the local analogous.</a></i4>",
   "rmkdir": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrmkdir - create a remote directory</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrmkdir <A> # just for alignment\n\n<b>rmkdir</b> <u>DIR</u>\n\n<b>rmkdir</b> [<u>SHARING_LOCATION</u>] <u>DIR</u></a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nCreate the remote directory <u>DIR</u>.\n\nParent directories of <u>DIR</u> are automatically created when needed.\n\nIf <u>DIR</u> already exists, it does nothing.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rmkdir</b> <u>newdir</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> rcd newdir\n<b>bob-debian.music:/newdir</b> - <b>/tmp></b></a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help mkdir</b>\" for the local analogous.</a></i4>",
   "rcp": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrcp - copy files and directories remotely</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrcp <A> # just for alignment\n<b>rcp</b> <u>SOURCE</u> <u>DEST</u>\n<b>rcp</b> <u>SOURCE</u>... <u>DIR</u>\n\n<b>rcp</b> [<u>SHARING_LOCATION</u>] <u>SOURCE</u> <u>DEST</u>\n<b>rcp</b> [<u>SHARING_LOCATION</u>] <u>SOURCE</u>... <u>DIR</u></a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nCopy remote <u>SOURCE</u> file or directory to <u>DEST</u>, or copy multiple </u>SOURCE</u>s to the directory <u>DIR</u>.\n\nIf used with two arguments as \"<b>rcp</b> <u>SOURCE</u> <u>DEST</u>\" the following rules are applied:\n  <a>\n- If <u>DEST</u> doesn't exists, <u>SOURCE</u> will copied as <u>DEST</u>\n- If <u>DEST</u> exists and it is a directory, <u>SOURCE</u> will be copied into <u>DEST</u>\n- If <u>DEST</u> exists and it is a file, <u>SOURCE</u> must be a file and it will overwrite <u>DEST</u>\n  </a>\nIf used with at least arguments as \"<b>rcp</b> <u>SOURCE</u>... <u>DIR</u>\" then <u>DIR</u> must be an existing directory and <u>SOURCE</u>s will be copied into it.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> rls\nf1\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rcp</b> <u>f1</u> <u>f2</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> rls\nf1      f2\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> rtree\n|-- dir\n|-- f1\n+-- f2\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rcp</b> <u>f1</u> <u>f2</u> <u>dir</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> rtree\n|-- dir\n|   |-- f1\n|   +-- f2\n|-- f1\n+-- f2</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help cp</b>\" for the local analogous.</a></i4>",
   "rmv": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrmv - move files and directories remotely</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrmv <A> # just for alignment\n<b>rmv</b> <u>SOURCE</u> <u>DEST</u>\n<b>rmv</b> <u>SOURCE</u>... <u>DIR</u>\n\n<b>rmv</b> [<u>SHARING_LOCATION</u>] <u>SOURCE</u> <u>DEST</u>\n<b>rmv</b> [<u>SHARING_LOCATION</u>] <u>SOURCE</u>... <u>DIR</u></a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nMove remote <u>SOURCE</u> file or directory to <u>DEST</u>, or move multiple </u>SOURCE</u>s to the directory <u>DIR</u>.\n\nIf used with two arguments as \"<b>rmv</b> <u>SOURCE</u> <u>DEST</u>\" the following rules are applied:\n  <a>\n- If <u>DEST</u> doesn't exists, <u>SOURCE</u> will moved as <u>DEST</u>\n- If <u>DEST</u> exists and it is a directory, <u>SOURCE</u> will be moved into <u>DEST</u>\n- If <u>DEST</u> exists and it is a file, <u>SOURCE</u> must be a file and it will overwrite <u>DEST</u>\n  </a>\nIf used with at least arguments as \"<b>rmv</b> <u>SOURCE</u>... <u>DIR</u>\" then <u>DIR</u> must be an existing directory and <u>SOURCE</u>s will be moved into it.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> rls\nf1\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rmv</b> <u>f1</u> <u>f2</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> rls\nf2\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> rtree\n|-- dir\n|-- f1\n+-- f2\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rmv</b> <u>f1</u> <u>f2</u> <u>dir</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> rtree dir\n+-- dir\n    |-- f1\n    +-- f2</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help mv</b>\" for the local analogous.</a></i4>",
   "rrm": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrrm - remove files and directories remotely</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrrm <A> # just for alignment\n<b>rrm</b> [FILE]...\n\n<b>rrm</b> [<u>SHARING_LOCATION</u>] [FILE]...</a>\n\n<u>SHARING_LOCATION</u> must be specified if and only if not already connected to a remote sharing. In that case the connection will be established before execute the command, as \"<b>open</b> <u>SHARING_LOCATION</u>\" would do.\n\nType \"<b>help open</b>\" for more information about <u>SHARING_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nRemove remote <u>FILE</u>s.\n\nIf a <u>FILE</u> is a directory, it will be removed recursively.\n\nIf a <u>FILE</u> does not exists, it will be ignored.\n\nThis commands never prompts: essentially acts like unix's rm -rf.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> rls\nf1      f2\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rrm</b> <u>f2</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> <rls\nf1\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> rtree\n|-- dir\n|   |-- f1\n|   +-- f2\n+-- f1\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rrm</b> <u>dir</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> rtree\n+-- f1</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help rm</b>\" for the local analogous.</a></i4>",
   "rexec": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrexec - execute an arbitrary command remotely</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrexec <A> # just for alignment\n<b>rexec</b> <u>COMMAND</u>\n<b>::</b>    <u>COMMAND</u>\n<b>::</b><u>COMMAND</u>\n\n<b>rexec</b> [<u>SERVER_LOCATION</u>] <u>COMMAND</u>\n<b>::</b>    [<u>SERVER_LOCATION</u>] <u>COMMAND</u>\n<b>::</b>[<u>SERVER_LOCATION</u>] <u>COMMAND</u></a>\n\n<u>SERVER_LOCATION</u> must be specified if and only if not already connected to a remote server. In that case the connection will be established before execute the command, as \"<b>connect</b> <u>SERVER_LOCATION</u>\" would do.\n\nType \"<b>help connect</b>\" for more information about <u>SERVER_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nTHE SERVER REJECTS THIS COMMAND BY DEFAULT, UNLESS IT HAS BEEN MANUALLY ENABLED WITH THE SETTING \"<u>rexec=true</u>\"\n\nExecutes an arbitrary <u>COMMAND</u> remotely.\n\nThe <u>COMMAND</u> is executed via the shell and therefore allows all the shell features (e.g. variables, glob expansions, redirection).\n\nThis might be useful for execute commands remotely, giving the client a kind of easy and plug-and-play shell.\n\nThe command can be run either with \"<b>rexec</b> <u>COMMAND</u>\",  \"<b>::</b> <u>COMMAND</u>\" or \"<b>::</b><u>COMMAND</u>\".\n\nCurrently supported only for Unix.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> rls\nf1      f2\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rexec</b> <u>touch f3</u>\nf1      f2      f3\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>::</b> <u>echo \"hello\" > f3</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>::</b><u>cat f3</u>\nhello</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help exec</b>\" for the local analogous.</a></i4>",
   "::": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrexec - execute an arbitrary command remotely</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrexec <A> # just for alignment\n<b>rexec</b> <u>COMMAND</u>\n<b>::</b>    <u>COMMAND</u>\n<b>::</b><u>COMMAND</u>\n\n<b>rexec</b> [<u>SERVER_LOCATION</u>] <u>COMMAND</u>\n<b>::</b>    [<u>SERVER_LOCATION</u>] <u>COMMAND</u>\n<b>::</b>[<u>SERVER_LOCATION</u>] <u>COMMAND</u></a>\n\n<u>SERVER_LOCATION</u> must be specified if and only if not already connected to a remote server. In that case the connection will be established before execute the command, as \"<b>connect</b> <u>SERVER_LOCATION</u>\" would do.\n\nType \"<b>help connect</b>\" for more information about <u>SERVER_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nTHE SERVER REJECTS THIS COMMAND BY DEFAULT, UNLESS IT HAS BEEN MANUALLY ENABLED WITH THE SETTING \"<u>rexec=true</u>\"\n\nExecutes an arbitrary <u>COMMAND</u> remotely.\n\nThe <u>COMMAND</u> is executed via the shell and therefore allows all the shell features (e.g. variables, glob expansions, redirection).\n\nThis might be useful for execute commands remotely, giving the client a kind of easy and plug-and-play shell.\n\nThe command can be run either with \"<b>rexec</b> <u>COMMAND</u>\",  \"<b>::</b> <u>COMMAND</u>\" or \"<b>::</b><u>COMMAND</u>\".\n\nCurrently supported only for Unix.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> rls\nf1      f2\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>rexec</b> <u>touch f3</u>\nf1      f2      f3\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>::</b> <u>echo \"hello\" > f3</u>\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>::</b><u>cat f3</u>\nhello</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help exec</b>\" for the local analogous.</a></i4>",
   "rshell": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrshell - start a remote shell</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrshell <A> # just for alignment\n<b>rshell</b>\n<b>rsh</b></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nStart a remote shell using the remote user's preferred shell.\nDifferently from rexec, this really opens a pseudo terminal (ssh style).\n\nCurrently supported only if the server is Unix.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help shell</b>\" for the local analogous.</a></i4>",
   "rsh": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nrshell - start a remote shell</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nrshell <A> # just for alignment\n<b>rshell</b>\n<b>rsh</b></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nStart a remote shell using the remote user's preferred shell.\nDifferently from rexec, this really opens a pseudo terminal (ssh style).\n\nCurrently supported only if the server is Unix.</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nType \"<b>help shell</b>\" for the local analogous.</a></i4>",
   "scan": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nscan - scan the network for easyshare servers</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nscan <A> # just for alignment\n<b>scan</b> [<u>OPTION</u>]...\n<b>s</b>    [<u>OPTION</u>]...</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nScan the network for easyshare server and reports the details of the sharings found.\n\nThe discover is performed in broadcast in the network.\n\nThe port on which the discover is performed is the one specified to <b>es</b> via <b>-d</b> <u>port</u>, or the default one if not specified.\n\nThe scan time is two seconds unless it has been specified to <b>es</b> via <b>-w</b> <u>seconds</u>.\n\nOnly details about the sharings are shown, unless <b>-L</b> is given.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n      <A> # alignment\n<b>-L</b>    show more details of both servers and sharings\n<b>-l</b>    show more details of sharings</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> <b>scan</b>\n<b>alice-arch (192.168.1.105:12020)</b>\n  DIRECTORIES\n  - shared\n  - tmp\n<b>bob-debian (192.168.1.185:12020)</b>\n  DIRECTORIES\n  - music\n  FILES\n  - README.txt</a></i4>",
   "s": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nscan - scan the network for easyshare servers</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nscan <A> # just for alignment\n<b>scan</b> [<u>OPTION</u>]...\n<b>s</b>    [<u>OPTION</u>]...</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nScan the network for easyshare server and reports the details of the sharings found.\n\nThe discover is performed in broadcast in the network.\n\nThe port on which the discover is performed is the one specified to <b>es</b> via <b>-d</b> <u>port</u>, or the default one if not specified.\n\nThe scan time is two seconds unless it has been specified to <b>es</b> via <b>-w</b> <u>seconds</u>.\n\nOnly details about the sharings are shown, unless <b>-L</b> is given.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n      <A> # alignment\n<b>-L</b>    show more details of both servers and sharings\n<b>-l</b>    show more details of sharings</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> <b>scan</b>\n<b>alice-arch (192.168.1.105:12020)</b>\n  DIRECTORIES\n  - shared\n  - tmp\n<b>bob-debian (192.168.1.185:12020)</b>\n  DIRECTORIES\n  - music\n  FILES\n  - README.txt</a></i4>",
   "connect": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nconnect - connect to a remote server</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nconnect <A> # just for alignment\n<b>connect</b> <u>SERVER_LOCATION</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nConnect to a remote server whose location is specified by <u>SERVER_LOCATION</u>.\n\n<u>SERVER_LOCATION</u> has the following syntax:\n<i+4><<u>server_name</u>> or <<u>address</u>>[:<<u>port</u>>]</i>\n\nSee the section <b>EXAMPLES</b> for more examples about <u>SERVER_LOCATION</u>.\n   <a>\nThe following rules are applied for establish a connection:\n1. If <u>SERVER_LOCATION</u> is a valid <<u>server_name</u>> (e.g. alice-arch), a discover is performed for figure out which port the server is bound to.\n2. If <u>SERVER_LOCATION</u> has the form <<u>address</u>> (e.g. 192.168.1.105), the connection will be tried to be established directly to the server at the the default port. If the attempt fails, a discover is performed for figure out which port the server is really bound to and another attempt is done.\n3. If <u>SERVER_LOCATION</u> has the form <<u>address</u>>:<<u>port</u>> (e.g, 182.168.1.106:22020), the connection will be established directly.\n   </a>\nThe discover, if involved (1. and 2.), is performed on the port specified to <b>es</b>with <b>-d</b> <u>port</u> for the time specified with <b>-w</b> <u>seconds</u> (default is two seconds).\n\nNote that <b>connect</b> is not necessary if you want to directly open a sharing, you can use <b>open</b> which automatically will establish the connection with the server as <b>connect</b> would do.\n\nThere might be cases in which use <b>connect</b> is still required, for example for execute server commands (i.e. info, ping, list, rexec) which are not related to any sharings (you can use those commands if connected to a sharing, by the way).\n\nWhen possible, using \"<b>connect</b> <<u>server_name</u>>\" (1.) is more immediate and human friendly compared to specify the address and eventually the port of the server (2. and 3.).\n\nThere are cases in which specify the address and the port of the server (3.) is necessary, for example when the discover can't be performed because the server is not on the same network of the client (e.g. behind a NAT).\n\nIf already connected to a server, a successful <b>connect</b> execution to another server automatically closes the current connection.\n\nRemember that <b>connect</b> establish the connection with the server, but do not place you inside any server's sharing. Use <b>open</b> for that.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. Connection by server name (discover)</a>\n<b>/tmp></b> <b>connect</b> <u>alice-arch</u>\n<b>alice-arch</b> - <b>/tmp></b> list\nDIRECTORIES\n- shared\n- tmp\n   <a>\n2. Connection by address (direct attempt, discover if fails)</a>\n<b>/tmp></b> <b>connect</b> <u>192.168.1.105</u>\n<b>alice-arch</b> - <b>/tmp></b>\n   <a>\n3. Connection by address and port (direct)</a>\n<b>/tmp></b> <b>connect</b> <u>89.1.2.84:22020</u>\n<b>eve-kali</b> - <b>/tmp></b></a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>disconnect></b>, <b>open</b></a></i4>",
   "c": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nconnect - connect to a remote server</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nconnect <A> # just for alignment\n<b>connect</b> <u>SERVER_LOCATION</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nConnect to a remote server whose location is specified by <u>SERVER_LOCATION</u>.\n\n<u>SERVER_LOCATION</u> has the following syntax:\n<i+4><<u>server_name</u>> or <<u>address</u>>[:<<u>port</u>>]</i>\n\nSee the section <b>EXAMPLES</b> for more examples about <u>SERVER_LOCATION</u>.\n   <a>\nThe following rules are applied for establish a connection:\n1. If <u>SERVER_LOCATION</u> is a valid <<u>server_name</u>> (e.g. alice-arch), a discover is performed for figure out which port the server is bound to.\n2. If <u>SERVER_LOCATION</u> has the form <<u>address</u>> (e.g. 192.168.1.105), the connection will be tried to be established directly to the server at the the default port. If the attempt fails, a discover is performed for figure out which port the server is really bound to and another attempt is done.\n3. If <u>SERVER_LOCATION</u> has the form <<u>address</u>>:<<u>port</u>> (e.g, 182.168.1.106:22020), the connection will be established directly.\n   </a>\nThe discover, if involved (1. and 2.), is performed on the port specified to <b>es</b>with <b>-d</b> <u>port</u> for the time specified with <b>-w</b> <u>seconds</u> (default is two seconds).\n\nNote that <b>connect</b> is not necessary if you want to directly open a sharing, you can use <b>open</b> which automatically will establish the connection with the server as <b>connect</b> would do.\n\nThere might be cases in which use <b>connect</b> is still required, for example for execute server commands (i.e. info, ping, list, rexec) which are not related to any sharings (you can use those commands if connected to a sharing, by the way).\n\nWhen possible, using \"<b>connect</b> <<u>server_name</u>>\" (1.) is more immediate and human friendly compared to specify the address and eventually the port of the server (2. and 3.).\n\nThere are cases in which specify the address and the port of the server (3.) is necessary, for example when the discover can't be performed because the server is not on the same network of the client (e.g. behind a NAT).\n\nIf already connected to a server, a successful <b>connect</b> execution to another server automatically closes the current connection.\n\nRemember that <b>connect</b> establish the connection with the server, but do not place you inside any server's sharing. Use <b>open</b> for that.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. Connection by server name (discover)</a>\n<b>/tmp></b> <b>connect</b> <u>alice-arch</u>\n<b>alice-arch</b> - <b>/tmp></b> list\nDIRECTORIES\n- shared\n- tmp\n   <a>\n2. Connection by address (direct attempt, discover if fails)</a>\n<b>/tmp></b> <b>connect</b> <u>192.168.1.105</u>\n<b>alice-arch</b> - <b>/tmp></b>\n   <a>\n3. Connection by address and port (direct)</a>\n<b>/tmp></b> <b>connect</b> <u>89.1.2.84:22020</u>\n<b>eve-kali</b> - <b>/tmp></b></a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>disconnect></b>, <b>open</b></a></i4>",
   "disconnect": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ndisconnect - disconnect from a remote server</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\n<b>disconnect</b></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nDisconnect from the remote server to which the connection is established.\n\nWhile this command is the counterpart of <b>connect</b>, it can be used to close connections opened in other ways (i.e. with <b>open</b>).\n\nThis differs from <b>close</b> which closes only the currently opened sharing without closing the connection.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> <b>disconnect</b>\n<b>/tmp></b> connect</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>connect</b>, <b>close</b></a></i4>",
   "open": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nopen - open a remote sharing (eventually discovering it)</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nopen <A> # just for alignment\n<b>open</b> <u>SHARING_LOCATION</u>\n<b>o</b>    <u>SHARING_LOCATION</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nOpen a sharing whose location is specified by <u>SHARING_LOCATION</u>\n\n<u>SHARING_LOCATION</u> has the following syntax:\n<i+4><<u>sharing_name</u>>[@<<u>server_name</u>>|<<u>address</u>>[:<<u>port</u>>]]</i>\n\nSee the section <b>EXAMPLES</b> for more examples about <u>SHARING_LOCATION</u>.\n\nThe following rules are applied for establish a connection:\n   <a>\n1. If <u>SHARING_LOCATION</u> is a valid <<u>sharing_name</u>> (e.g. shared), a discover is performed for figure out to which server the sharing belongs to.\n2. If <u>SHARING_LOCATION</u> has the form <<u>sharing_name</u>>@<<u>server_name</u>>[:port] (e.g. shared@alice-arch) a discover is performed as well as in case 1. and the <<u>server_name</u>> and the <<u>port</u>> act only as a filter (i.e. the connection won't be established if they don't match).\n3. If <u>SHARING_LOCATION</u> has the form <<u>sharing_name</u>>@<<u>address</u>> (e.g. shared@192.168.1.105) the connection will be tried to be established directly to the server at the default port. If the attempt fails, a discover is performed for figure out which port the server is really bound to and another attempt is done.\n4. If <u>SHARING_LOCATION</u> has the form <<u>sharing_name</u>>@<<u>address</u>>:<<u>port</u>> (e.g. shared@192.168.1.105:12020) the connection will be established directly.\n   </a>\nThe discover, if involved (1., 2. and 3.), is performed on the port specified to <b>es</b> with <b>-d</b> <u>port</u> for the time specified with <b>-w</b> <u>seconds</u> (default is two seconds).\n\nNote that <b>connect</b> is not necessary if you want to directly open a sharing, you can use <b>open</b> which automatically will establish the connection with the server as <b>connect</b> would do.\n\nWhen possible, using the server name (1., 2. and 3.) is more immediate and human friendly compared to specify the address and eventually the port of the server (4.).\n\nThere are cases in which specify the address and the port of the server (4.) is necessary, for example when the discover can't be performed because the server is not on the same network of the client (e.g. behind a NAT).\n\nIf the sharing described by <u>SHARING_LOCATION</u> is found within the sharings of the server to which the connection is already established, it will be obviously opened without perform any kind of discover or new connection.\n\nIf already connected to a server and/or a sharing, a successful <b>open</b> execution to another server automatically closes the current connection.\n\nIf, for some reason, there is more than a sharing with the same name on the same network, <b>open</b> will try to connect to the one that is discovered first (in general it's unpredictable which will be).\n\nIf you need a deterministic (and more safe) approach, consider using <b>scan</b> for discover the server manually (eventually followed by a consecutive <b>info</b> call for fetch more accurate details such as SSL certificate) then invoke <b>open</b> specifying the server details too (i.e. server name or address and port).\n\nIn general, <b>open</b> doesn't require you to use <b>connect</b> before; the connection will be created for you automatically.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. Connection by sharing name (while connected)</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> <b>open</b> <u>temp</u>\n<b>alice-arch.temp:/</b> - <b>/tmp></b> rls\nf1      f2\n    <a>\n1b. Connection by sharing name (discover)</a>\n<b>/tmp></b> <b>open<b> temp\n<b>alice-arch.temp:/</b> - <b>/tmp></b> rls\nf1      f2\n   <a>\n2. Connection by sharing name with server name filter (discover)</a>\n<b>/tmp></b> <b>open</b> <u>temp@alice-arch</u>\n<b>alice-arch.temp:/</b> - <b>/tmp></b>\n   <a>\n3. Connection by sharing name with address (attempt direct, discover if fails)</a>\n<b>/tmp></b> <b>open</b> <u>temp@alice-arch</u>\n<b>alice-arch.temp:/</b> - <b>/tmp></b>\n   <a>\n4. Connection by sharing name with address and port (direct)</a>\n<b>/tmp></b> <b>open</b> <u>temp@192.168.1.105:12020</u>\n<b>alice-arch.temp:/</b> - <b>/tmp></b></a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>close></b>, <b>connect</b></a></i4>",
   "o": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nopen - open a remote sharing (eventually discovering it)</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nopen <A> # just for alignment\n<b>open</b> <u>SHARING_LOCATION</u>\n<b>o</b>    <u>SHARING_LOCATION</u></a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nOpen a sharing whose location is specified by <u>SHARING_LOCATION</u>\n\n<u>SHARING_LOCATION</u> has the following syntax:\n<i+4><<u>sharing_name</u>>[@<<u>server_name</u>>|<<u>address</u>>[:<<u>port</u>>]]</i>\n\nSee the section <b>EXAMPLES</b> for more examples about <u>SHARING_LOCATION</u>.\n\nThe following rules are applied for establish a connection:\n   <a>\n1. If <u>SHARING_LOCATION</u> is a valid <<u>sharing_name</u>> (e.g. shared), a discover is performed for figure out to which server the sharing belongs to.\n2. If <u>SHARING_LOCATION</u> has the form <<u>sharing_name</u>>@<<u>server_name</u>>[:port] (e.g. shared@alice-arch) a discover is performed as well as in case 1. and the <<u>server_name</u>> and the <<u>port</u>> act only as a filter (i.e. the connection won't be established if they don't match).\n3. If <u>SHARING_LOCATION</u> has the form <<u>sharing_name</u>>@<<u>address</u>> (e.g. shared@192.168.1.105) the connection will be tried to be established directly to the server at the default port. If the attempt fails, a discover is performed for figure out which port the server is really bound to and another attempt is done.\n4. If <u>SHARING_LOCATION</u> has the form <<u>sharing_name</u>>@<<u>address</u>>:<<u>port</u>> (e.g. shared@192.168.1.105:12020) the connection will be established directly.\n   </a>\nThe discover, if involved (1., 2. and 3.), is performed on the port specified to <b>es</b> with <b>-d</b> <u>port</u> for the time specified with <b>-w</b> <u>seconds</u> (default is two seconds).\n\nNote that <b>connect</b> is not necessary if you want to directly open a sharing, you can use <b>open</b> which automatically will establish the connection with the server as <b>connect</b> would do.\n\nWhen possible, using the server name (1., 2. and 3.) is more immediate and human friendly compared to specify the address and eventually the port of the server (4.).\n\nThere are cases in which specify the address and the port of the server (4.) is necessary, for example when the discover can't be performed because the server is not on the same network of the client (e.g. behind a NAT).\n\nIf the sharing described by <u>SHARING_LOCATION</u> is found within the sharings of the server to which the connection is already established, it will be obviously opened without perform any kind of discover or new connection.\n\nIf already connected to a server and/or a sharing, a successful <b>open</b> execution to another server automatically closes the current connection.\n\nIf, for some reason, there is more than a sharing with the same name on the same network, <b>open</b> will try to connect to the one that is discovered first (in general it's unpredictable which will be).\n\nIf you need a deterministic (and more safe) approach, consider using <b>scan</b> for discover the server manually (eventually followed by a consecutive <b>info</b> call for fetch more accurate details such as SSL certificate) then invoke <b>open</b> specifying the server details too (i.e. server name or address and port).\n\nIn general, <b>open</b> doesn't require you to use <b>connect</b> before; the connection will be created for you automatically.</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. Connection by sharing name (while connected)</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> <b>open</b> <u>temp</u>\n<b>alice-arch.temp:/</b> - <b>/tmp></b> rls\nf1      f2\n    <a>\n1b. Connection by sharing name (discover)</a>\n<b>/tmp></b> <b>open<b> temp\n<b>alice-arch.temp:/</b> - <b>/tmp></b> rls\nf1      f2\n   <a>\n2. Connection by sharing name with server name filter (discover)</a>\n<b>/tmp></b> <b>open</b> <u>temp@alice-arch</u>\n<b>alice-arch.temp:/</b> - <b>/tmp></b>\n   <a>\n3. Connection by sharing name with address (attempt direct, discover if fails)</a>\n<b>/tmp></b> <b>open</b> <u>temp@alice-arch</u>\n<b>alice-arch.temp:/</b> - <b>/tmp></b>\n   <a>\n4. Connection by sharing name with address and port (direct)</a>\n<b>/tmp></b> <b>open</b> <u>temp@192.168.1.105:12020</u>\n<b>alice-arch.temp:/</b> - <b>/tmp></b></a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>close></b>, <b>connect</b></a></i4>",
   "close": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nclose - close the remote sharing</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\n<b>close</b>\n<b>c</b></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nClose the currently opened sharing.\n\nIf the sharing connection has been created directly with <b>open</b> instead of <b>connect</b> and then <b>open</b>, than the server connection is closed too (for symmetry).</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. Close sharing connection only</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp></b> <b>close</b>\n<b>alice-arch</b> - <b>/tmp></b> <b>close</b>\n   <a>\n2. Close both sharing and server connection</a>\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>close</b>\n<b>/tmp></b></a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>open</b>, <b>disconnect</b></a></i4>",
   "get": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nget - get files and directories from the remote sharing</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nget <A> # just for alignment\n<b>get</b> [OPTION]... [<u>REMOTE_FILE</u>]...\n<b>g</b>   [OPTION]... [<u>REMOTE_FILE</u>]...\n\n<b>get</b> [OPTION]... [<u>SHARING_LOCATION</u>] [<u>REMOTE_FILE</u>]...\n<b>g</b>   [OPTION]... [<u>SHARING_LOCATION</u>] [<u>REMOTE_FILE</u>]...</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nGet files and directories from a remote sharing to the local machine.\n\n\nThis command can be used for two similar purpose:\n   <A>\n1. Download either files or directory from a \"directory sharing\"\n2. Download a \"file sharing\" (i.e. a single file with a sharing name assigned to it).\n</a>\nIn case 1. a connection to the remote sharing have to be established in one of the following manners:\n    <A>\n1a. Create a connection to the sharing with <b>connect</b> and/or <b>open</b>\n1b. Provide a <u>SHARING_LOCATION</u> to the <b>get</b> command (e.g. get alice-arch temp)\n    </A>\n    \nIf execute while connected to a \"directory sharing\" (1.) the following rules are applied:\n  <A>\n- If <u>REMOTE_FILE</u>s arguments are given, then the specified remote files are downloaded into the local directory\n- If no <u>REMOTE_FILE</u> argument is given, then the entire sharing is downloaded into the local directory within a folder that has he same name as the sharing\n- If <u>REMOTE_FILE</u> is \"*\", then the entire sharing is downloaded into the local directory (without wrapping it into a folder)\n  </A>\n  \nFor download a \"file sharing\" (2.), <b>get</b> must be used in the form \"<b>get</b> [<u>SHARING_LOCATION</u>]\" (e.g. get alice-arch file) and there is no need to <b>open</b> the sharing before (since it's a file), as in case 1. \n\n<u>REMOTE_FILE</u> can be:\n  <A>\n- a path relative to the current remote working directory (<b>rpwd</b>), (e.g. afile, adir/afile)\n- a path absolute with respect to the sharing root, which is defined by a leading slash (e.g. /f1)\n  </A>\n  \nThe files will be placed into the current local directory (which can be changed with <b>cd</b>, inside or outside <b>es</b>).\n\nDirectories are automatically downloaded recursively.\n\nIf a remote file has the same name of a local file, you will be asked whether overwrite it or not. The default overwrite behaviour can be specified with the options <b>-y</b> (yes), <b>-n</b> (no), <b>-N</b> (overwrite if newer) \nand <b>-S</b> (overwrite if size is different).</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                             <A> # alignment\n<b>-c</b>, <b>--check</b>                  performs a check of files consistency\n<b>-h</b>, <b>--no-hidden</b>              doesn't copy hidden files\n<b>-N</b>, <b>--overwrite-newer</b>        overwrite files only if newer\n<b>-n</b>, <b>--overwrite-no</b>           never overwrite files\n<b>-p</b>, <b>--preview</b>                do not transfer, just show a preview of what will happen\n<b>-q</b>, <b>--quiet</b>                  doesn't show progress\n<b>-S</b>, <b>--overwrite-diff-size</b>    overwrite files only if size is different\n<b>-s</b>, <b>--sync</b>                   synchronize (same as -N but remove old files)\n<b>-y</b>, <b>--overwrite-yes</b>          always overwrite files</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\n\n   <a>\n1. Get all the content of a directory sharing (wrapped into a folder)</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp></b> <b>get</b>\nGET shared/f_remote_1    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n|-- f2\n+-- shared\n    +-- f_remote_1\n   <a>\n2. Get all the content of a directory sharing (into the current directory)</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp></b> <b>get</b> <u>*</u>\nGET f_remote_1    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n|-- f2\n+-- f_remote_1\n   <a>\n3. Get specific files from a directory sharing</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp></b> rls\nf_remote_1      f_remote_2      f_remote_another\n<b>alice-arch.shared:/</b> - <b>/tmp></b> <b>get</b> <u>f_remote_1</u> u>f_remote_2</u>\nGET f_remote_1    [===================] 100%  745KB/745KB\nGET f_remote_2    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        2  (1.4MB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n|-- f2\n|-- f_remote_1\n+-- f_remote_2\n   <a>\n4. Get without establish a connection before</a>\n<b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>/tmp></b> <b>get</b> <u>shared</u>\nGET f_remote_1    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>/tmp></b> tree\n|-- f1\n|-- f2\n+-- shared\n    +-- f_remote_1\n   <a>\n5. Get a file sharing (without establish a connection before)</a>\n<b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>/tmp></b> <b>get</b> <u>f_share</u>\nGET f_share    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>/tmp></b> tree\n|-- f1\n|-- f2\n+-- f_share</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>open</b>, <b>put</b></a></i4>",
   "g": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nget - get files and directories from the remote sharing</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nget <A> # just for alignment\n<b>get</b> [OPTION]... [<u>REMOTE_FILE</u>]...\n<b>g</b>   [OPTION]... [<u>REMOTE_FILE</u>]...\n\n<b>get</b> [OPTION]... [<u>SHARING_LOCATION</u>] [<u>REMOTE_FILE</u>]...\n<b>g</b>   [OPTION]... [<u>SHARING_LOCATION</u>] [<u>REMOTE_FILE</u>]...</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nGet files and directories from a remote sharing to the local machine.\n\n\nThis command can be used for two similar purpose:\n   <A>\n1. Download either files or directory from a \"directory sharing\"\n2. Download a \"file sharing\" (i.e. a single file with a sharing name assigned to it).\n</a>\nIn case 1. a connection to the remote sharing have to be established in one of the following manners:\n    <A>\n1a. Create a connection to the sharing with <b>connect</b> and/or <b>open</b>\n1b. Provide a <u>SHARING_LOCATION</u> to the <b>get</b> command (e.g. get alice-arch temp)\n    </A>\n    \nIf execute while connected to a \"directory sharing\" (1.) the following rules are applied:\n  <A>\n- If <u>REMOTE_FILE</u>s arguments are given, then the specified remote files are downloaded into the local directory\n- If no <u>REMOTE_FILE</u> argument is given, then the entire sharing is downloaded into the local directory within a folder that has he same name as the sharing\n- If <u>REMOTE_FILE</u> is \"*\", then the entire sharing is downloaded into the local directory (without wrapping it into a folder)\n  </A>\n  \nFor download a \"file sharing\" (2.), <b>get</b> must be used in the form \"<b>get</b> [<u>SHARING_LOCATION</u>]\" (e.g. get alice-arch file) and there is no need to <b>open</b> the sharing before (since it's a file), as in case 1. \n\n<u>REMOTE_FILE</u> can be:\n  <A>\n- a path relative to the current remote working directory (<b>rpwd</b>), (e.g. afile, adir/afile)\n- a path absolute with respect to the sharing root, which is defined by a leading slash (e.g. /f1)\n  </A>\n  \nThe files will be placed into the current local directory (which can be changed with <b>cd</b>, inside or outside <b>es</b>).\n\nDirectories are automatically downloaded recursively.\n\nIf a remote file has the same name of a local file, you will be asked whether overwrite it or not. The default overwrite behaviour can be specified with the options <b>-y</b> (yes), <b>-n</b> (no), <b>-N</b> (overwrite if newer) \nand <b>-S</b> (overwrite if size is different).</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                             <A> # alignment\n<b>-c</b>, <b>--check</b>                  performs a check of files consistency\n<b>-h</b>, <b>--no-hidden</b>              doesn't copy hidden files\n<b>-N</b>, <b>--overwrite-newer</b>        overwrite files only if newer\n<b>-n</b>, <b>--overwrite-no</b>           never overwrite files\n<b>-p</b>, <b>--preview</b>                do not transfer, just show a preview of what will happen\n<b>-q</b>, <b>--quiet</b>                  doesn't show progress\n<b>-S</b>, <b>--overwrite-diff-size</b>    overwrite files only if size is different\n<b>-s</b>, <b>--sync</b>                   synchronize (same as -N but remove old files)\n<b>-y</b>, <b>--overwrite-yes</b>          always overwrite files</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\n\n   <a>\n1. Get all the content of a directory sharing (wrapped into a folder)</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp></b> <b>get</b>\nGET shared/f_remote_1    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n|-- f2\n+-- shared\n    +-- f_remote_1\n   <a>\n2. Get all the content of a directory sharing (into the current directory)</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp></b> <b>get</b> <u>*</u>\nGET f_remote_1    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n|-- f2\n+-- f_remote_1\n   <a>\n3. Get specific files from a directory sharing</a>\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp></b> rls\nf_remote_1      f_remote_2      f_remote_another\n<b>alice-arch.shared:/</b> - <b>/tmp></b> <b>get</b> <u>f_remote_1</u> u>f_remote_2</u>\nGET f_remote_1    [===================] 100%  745KB/745KB\nGET f_remote_2    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        2  (1.4MB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp></b> tree\n|-- f1\n|-- f2\n|-- f_remote_1\n+-- f_remote_2\n   <a>\n4. Get without establish a connection before</a>\n<b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>/tmp></b> <b>get</b> <u>shared</u>\nGET f_remote_1    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>/tmp></b> tree\n|-- f1\n|-- f2\n+-- shared\n    +-- f_remote_1\n   <a>\n5. Get a file sharing (without establish a connection before)</a>\n<b>/tmp></b> tree\n|-- f1\n+-- f2\n<b>/tmp></b> <b>get</b> <u>f_share</u>\nGET f_share    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>/tmp></b> tree\n|-- f1\n|-- f2\n+-- f_share</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>open</b>, <b>put</b></a></i4>",
   "put": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nput - put files and directories to the remote sharing</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nput <A> # just for alignment\n<b>put</b> [OPTION]... [<u>LOCAL_FILE</u>]...\n<b>p</b>   [OPTION]... [<u>LOCAL_FILE</u>]...\n\n<b>put</b> [OPTION]... [<u>SHARING_LOCATION</u>] [<u>LOCAL_FILE</u>]...\n<b>p</b>   [OPTION]... [<u>SHARING_LOCATION</u>] [<u>LOCAL_FILE</u>]...</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nPut files and directories into a remote sharing.\n\nThe remote sharing must be of type \"directory sharing\", otherwise <b>put</b> will fail.\n\nThe connection to the remote sharing have to be established in one of the following manners:\n  <A>\n- Create a connection to the sharing with <b>connect</b> and/or <b>open</b>\n- Provide a <u>SHARING_LOCATION</u> to the <b>put</b> command (e.g. put alice-arch f1)\n  </A>\n    \nIf execute while connected to a \"directory sharing\" (1.) the following rules are applied:\n  <A>\n- If <u>LOCAL_FILE</u>s arguments are given, then the specified local files are uploaded into the remote directory\n- If no <u>LOCAL_FILE</u> argument is given, then the entire local folder is uploaded into the remote sharing within a folder that has he same name as the folder\n- If <u>LOCAL_FILE</u> is \"*\", then the entire local folder is uploaded into the remote sharing (without wrapping it into a folder)\n  </A>\n\n<u>LOCAL_FILE</u> must be a path to a local valid file or directory, either relative or absolute.\n  \nThe files will be placed into the current remote directory (which can be changed with <b>rcd</b>).\nThe default remote directory is the root of the \"directory sharing\".\n\nDirectories are automatically uploaded recursively.\n\nIf a remote file has the same name of a local file, you will be asked whether overwrite it or not. The default overwrite behaviour can be specified with the options <b>-y</b> (yes), <b>-n</b> (no), <b>-N</b> (overwrite if newer) \nand <b>-S</b> (overwrite if size is different).</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                             <A> # alignment\n<b>-c</b>, <b>--check</b>                  performs a check of files consistency\n<b>-h</b>, <b>--no-hidden</b>              doesn't copy hidden files\n<b>-N</b>, <b>--overwrite-newer</b>        overwrite files only if newer\n<b>-n</b>, <b>--overwrite-no</b>           never overwrite files\n<b>-p</b>, <b>--preview</b>                do not transfer, just show a preview of what will happen\n<b>-q</b>, <b>--quiet</b>                  doesn't show progress\n<b>-S</b>, <b>--overwrite-diff-size</b>    overwrite files only if size is different\n<b>-s</b>, <b>--sync</b>                   synchronize (same as -N but remove old files)\n<b>-y</b>, <b>--overwrite-yes</b>          always overwrite files</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\n\n   <a>\n1. Put all the content of a directory into a sharing (wrapped into a folder)</a>\n<b>/tmp/localdir></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> <b>put</b>\nPUT localdir/f1    [===================] 100%  745KB/745KB\nPUT localdir/f2    [===================] 100%  745KB/745KB\nPUT outcome: OK\nFiles        2  (1.4MB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rtree\n|-- f_remote_1\n+-- localdir\n    |-- f1\n    +-- f2\n   <a>\n2. Put all the content of a directory into a sharing (not wrapped into a folder)</a>\n<b>/tmp/localdir></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> <b>put</b> <u>*</u>\nPUT f1    [===================] 100%  745KB/745KB\nPUT f2    [===================] 100%  745KB/745KB\nPUT outcome: OK\nFiles        2  (1.4MB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rtree\n|-- f_remote_1\n|-- f1\n+-- f2\n   <a>\n3. Put specific files into a sharing (not wrapped into a folder)</a>\n<b>/tmp/localdir></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> tree\n|-- f1\n|-- f2\n+-- f3\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> <b>put</b> <u>f1</u> <u>f2</u>\nPUT f1    [===================] 100%  745KB/745KB\nPUT f2    [===================] 100%  745KB/745KB\nPUT outcome: OK\nFiles        2  (1.4MB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rtree\n|-- f_remote_1\n|-- f1\n+-- f2\n   <a>\n4. Put without establish a connection before</a>\n<b>/tmp/localdir></b> <b>put</b> <u>shared</u> <u>f1</u>\nPUT f1    [===================] 100%  745KB/745KB\nPUT outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>/tmp/localdir></b> rtree shared\n+-- f1</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>open</b>, <b>get</b></a></i4>",
   "p": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nput - put files and directories to the remote sharing</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nput <A> # just for alignment\n<b>put</b> [OPTION]... [<u>LOCAL_FILE</u>]...\n<b>p</b>   [OPTION]... [<u>LOCAL_FILE</u>]...\n\n<b>put</b> [OPTION]... [<u>SHARING_LOCATION</u>] [<u>LOCAL_FILE</u>]...\n<b>p</b>   [OPTION]... [<u>SHARING_LOCATION</u>] [<u>LOCAL_FILE</u>]...</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nPut files and directories into a remote sharing.\n\nThe remote sharing must be of type \"directory sharing\", otherwise <b>put</b> will fail.\n\nThe connection to the remote sharing have to be established in one of the following manners:\n  <A>\n- Create a connection to the sharing with <b>connect</b> and/or <b>open</b>\n- Provide a <u>SHARING_LOCATION</u> to the <b>put</b> command (e.g. put alice-arch f1)\n  </A>\n    \nIf execute while connected to a \"directory sharing\" (1.) the following rules are applied:\n  <A>\n- If <u>LOCAL_FILE</u>s arguments are given, then the specified local files are uploaded into the remote directory\n- If no <u>LOCAL_FILE</u> argument is given, then the entire local folder is uploaded into the remote sharing within a folder that has he same name as the folder\n- If <u>LOCAL_FILE</u> is \"*\", then the entire local folder is uploaded into the remote sharing (without wrapping it into a folder)\n  </A>\n\n<u>LOCAL_FILE</u> must be a path to a local valid file or directory, either relative or absolute.\n  \nThe files will be placed into the current remote directory (which can be changed with <b>rcd</b>).\nThe default remote directory is the root of the \"directory sharing\".\n\nDirectories are automatically uploaded recursively.\n\nIf a remote file has the same name of a local file, you will be asked whether overwrite it or not. The default overwrite behaviour can be specified with the options <b>-y</b> (yes), <b>-n</b> (no), <b>-N</b> (overwrite if newer) \nand <b>-S</b> (overwrite if size is different).</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                             <A> # alignment\n<b>-c</b>, <b>--check</b>                  performs a check of files consistency\n<b>-h</b>, <b>--no-hidden</b>              doesn't copy hidden files\n<b>-N</b>, <b>--overwrite-newer</b>        overwrite files only if newer\n<b>-n</b>, <b>--overwrite-no</b>           never overwrite files\n<b>-p</b>, <b>--preview</b>                do not transfer, just show a preview of what will happen\n<b>-q</b>, <b>--quiet</b>                  doesn't show progress\n<b>-S</b>, <b>--overwrite-diff-size</b>    overwrite files only if size is different\n<b>-s</b>, <b>--sync</b>                   synchronize (same as -N but remove old files)\n<b>-y</b>, <b>--overwrite-yes</b>          always overwrite files</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\n\n   <a>\n1. Put all the content of a directory into a sharing (wrapped into a folder)</a>\n<b>/tmp/localdir></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> <b>put</b>\nPUT localdir/f1    [===================] 100%  745KB/745KB\nPUT localdir/f2    [===================] 100%  745KB/745KB\nPUT outcome: OK\nFiles        2  (1.4MB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rtree\n|-- f_remote_1\n+-- localdir\n    |-- f1\n    +-- f2\n   <a>\n2. Put all the content of a directory into a sharing (not wrapped into a folder)</a>\n<b>/tmp/localdir></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> tree\n|-- f1\n+-- f2\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> <b>put</b> <u>*</u>\nPUT f1    [===================] 100%  745KB/745KB\nPUT f2    [===================] 100%  745KB/745KB\nPUT outcome: OK\nFiles        2  (1.4MB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rtree\n|-- f_remote_1\n|-- f1\n+-- f2\n   <a>\n3. Put specific files into a sharing (not wrapped into a folder)</a>\n<b>/tmp/localdir></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> open shared\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> tree\n|-- f1\n|-- f2\n+-- f3\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rls\nf_remote_1\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> <b>put</b> <u>f1</u> <u>f2</u>\nPUT f1    [===================] 100%  745KB/745KB\nPUT f2    [===================] 100%  745KB/745KB\nPUT outcome: OK\nFiles        2  (1.4MB)\nTime         1s\nAvg. speed   1MB/s\n<b>alice-arch.shared:/</b> - <b>/tmp/localdir></b> rtree\n|-- f_remote_1\n|-- f1\n+-- f2\n   <a>\n4. Put without establish a connection before</a>\n<b>/tmp/localdir></b> <b>put</b> <u>shared</u> <u>f1</u>\nPUT f1    [===================] 100%  745KB/745KB\nPUT outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s\n<b>/tmp/localdir></b> rtree shared\n+-- f1</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\n<b>open</b>, <b>get</b></a></i4>",
   "list": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nlist - list the sharings of the remote server</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nlist <A> # just for alignment\n<b>list</b> [<u>OPTION</u>]...\n<b>list</b> [<u>SERVER_LOCATION</u>] [<u>OPTION</u>]...</a>\n\n<u>SERVER_LOCATION</u> must be specified if and only if not already connected to a remote server. In that case the connection will be established before execute the command, as \"<b>connect</b> <u>SERVER_LOCATION</u>\" would do.\n\nType \"<b>help connect</b>\" for more information about <u>SERVER_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nList the sharings of the remote server to which the connection is established.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n      <A> # alignment\n<b>-l</b>    show more details of sharings</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> <b>list</b>\nDIRECTORIES\n- shared\n- tmp\n\n<b>/tmp></b> open music\n<b>bob-debian.music:/</b> - <b>/tmp></b> <b>list</b>\nDIRECTORIES\n- music\nFILES\n- README.txt</a></i4>",
   "info": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ninfo - show information about the remote server</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\ninfo <A> # just for alignment\n<b>info</b> [<u>OPTION</u>]...\n<b>i</b>    [<u>OPTION</u>]...\n\n<b>info</b> [<u>SERVER_LOCATION</u>] [<u>OPTION</u>]...\n<b>i</b>    [<u>SERVER_LOCATION</u>] [<u>OPTION</u>]...</a>\n\n<u>SERVER_LOCATION</u> must be specified if and only if not already connected to a remote server. In that case the connection will be established before execute the command, as \"<b>connect</b> <u>SERVER_LOCATION</u>\" would do.\n\nType \"<b>help connect</b>\" for more information about <u>SERVER_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nShow information of the remote server to which the connection is established.\n\nThe reported information are: \n- Server version\n- Server name\n- Server ip\n- Server port\n- Server discover port\n- Authentication enabled/disabled\n- SSL enabled/disabled \n- SSL certificate info (if enabled)\n- Sharings</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n      <A> # alignment\n<b>-l</b>    show more details of sharings</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> <b>info</b>\n================================\n\nSERVER INFO\n\nName:             alice-arch\nAddress:          192.168.1.105\nPort:             12020\nDiscoverable:     True\nDiscover Port:    12019\nAuthentication:   False\nSSL:              True\nRemote execution: disabled\nVersion:          0.5\n\n================================\n\nSSL CERTIFICATE\n\nCommon name:        192.168.1.105\nOrganization:       Acme Corporation\nOrganization Unit:  Acme Corporation\nEmail:              acme@gmail.com\nLocality:           Los Angeles\nState:              Los Angeles\nCountry:            US\n\nValid From:         Apr 24 21:29:46 2020 GMT\nValid To:           Apr 24 21:29:46 2021 GMT\n\nIssuer:             192.168.1.105, Acme Corporation\nSigning:            self signed\n\n================================\n\nSHARINGS\n\n  DIRECTORIES\n  - tmp\n\n================================</a></i4>",
   "i": "<b>COMMAND</b>\n<I4>\n<A> # alignment\ninfo - show information about the remote server</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\ninfo <A> # just for alignment\n<b>info</b> [<u>OPTION</u>]...\n<b>i</b>    [<u>OPTION</u>]...\n\n<b>info</b> [<u>SERVER_LOCATION</u>] [<u>OPTION</u>]...\n<b>i</b>    [<u>SERVER_LOCATION</u>] [<u>OPTION</u>]...</a>\n\n<u>SERVER_LOCATION</u> must be specified if and only if not already connected to a remote server. In that case the connection will be established before execute the command, as \"<b>connect</b> <u>SERVER_LOCATION</u>\" would do.\n\nType \"<b>help connect</b>\" for more information about <u>SERVER_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nShow information of the remote server to which the connection is established.\n\nThe reported information are: \n- Server version\n- Server name\n- Server ip\n- Server port\n- Server discover port\n- Authentication enabled/disabled\n- SSL enabled/disabled \n- SSL certificate info (if enabled)\n- Sharings</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n      <A> # alignment\n<b>-l</b>    show more details of sharings</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> <b>info</b>\n================================\n\nSERVER INFO\n\nName:             alice-arch\nAddress:          192.168.1.105\nPort:             12020\nDiscoverable:     True\nDiscover Port:    12019\nAuthentication:   False\nSSL:              True\nRemote execution: disabled\nVersion:          0.5\n\n================================\n\nSSL CERTIFICATE\n\nCommon name:        192.168.1.105\nOrganization:       Acme Corporation\nOrganization Unit:  Acme Corporation\nEmail:              acme@gmail.com\nLocality:           Los Angeles\nState:              Los Angeles\nCountry:            US\n\nValid From:         Apr 24 21:29:46 2020 GMT\nValid To:           Apr 24 21:29:46 2021 GMT\n\nIssuer:             192.168.1.105, Acme Corporation\nSigning:            self signed\n\n================================\n\nSHARINGS\n\n  DIRECTORIES\n  - tmp\n\n================================</a></i4>",
   "ping": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nping - test the connection with the remote server</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nping <A> # just for alignment\n<b>ping</b> [<u>OPTION</u>]...\n\n<b>ping</b> [<u>OPTION</u>]... [<u>SERVER_LOCATION</u>]</a>\n\n<u>SERVER_LOCATION</u> must be specified if and only if not already connected to a remote server. In that case the connection will be established before execute the command, as \"<b>connect</b> <u>SERVER_LOCATION</u>\" would do.\n\nType \"<b>help connect</b>\" for more information about <u>SERVER_LOCATION</u> format.</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nTest the connectivity with the server by sending application-level messages.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                     <A> # alignment\n<b>-c</b>, <b>--count</b>  <u>count</u>   stop after <u>count</u> messages</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n\n<b>/tmp></b> connect alice-arch\n<b>alice-arch</b> - <b>/tmp></b> <b>ping</b>\n[1] PONG from alice-arch (192.168.1.105:12020)  |  time=5.1ms\n[2] PONG from alice-arch (192.168.1.105:12020)  |  time=0.9ms\n...\n\n<b>/tmp></b> <b>ping</b> <u>bob-debian</u> <b>-c</b> <u>1</u>\n[1] PONG from bob-debian (192.168.1.185:12020)  |  time=9.3ms\n\n<b>/tmp></b> <b>ping</b> <u>192.168.1.185</u> <b>-c</b> <u>1</u>\n[1] PONG from bob-debian (192.168.1.185:12020)  |  time=10.3ms</a></i4>",
   "es": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nes - client of the easyshare application</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nes <A> # just for alignment\n<b>es</b> [<u>OPTION</u>]... [<u>COMMAND</u> [<u>COMMAND_OPTIONS</u>]]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nClient of the easyshare network application.\n\nIf no <b>COMMAND</b> is given, the interactive console is started.\nIf <b>COMMAND</b> is a valid command, it is executed and the process quits unless the command is <b>open</b>.\n\nType \"<b>help <u>command</u>\" for the full documentation of a <u>command</u>.\n\nCommands:\n<I+4>\n                    <A>\nhelp                show this help\nexit, quit, q       exit from the interactive shell\ntrace, t            enable/disable packet tracing\nverbose, v          change verbosity level\n</i>\n<I+4>\nscan, s             scan the network for easyshare servers\nconnect, c          connect to a remote server\ndisconnect          disconnect from a remote server\nopen, o             open a remote sharing (eventually discovering it)\nclose               close the remote sharing\n</i>\n<I+4>\nget, g              get files and directories from the remote sharing\nput, p              put files and directories in the remote sharing\n</i>\n<I+4>\npwd                 show the name of current local working directory\nls                  list local directory content\nl                   alias for ls -la\ntree                list local directory contents in a tree-like format\ncd                  change local working directory\nmkdir               create a local directory\ncp                  copy files and directories locally\nmv                  move files and directories locally\nrm                  remove files and directories locally\nfind                search for local files\nexec, :             execute an arbitrary command locally\nshell, sh           start a local shell\n</i>\n<I+4>\nrpwd                show the name of current remote working directory\nrls                 list remote directory content\nrl                  alias for rls -la\nrtree               list remote directory contents in a tree-like format\nrcd                 change remote working directory\nrmkdir              create a remote directory\nrcp                 copy files and directories remotely\nrmv                 move files and directories remotely\nrrm                 remove files and directories remotely\nrfind               search for local files\nrexec, ::           execute an arbitrary command remotely\nrshell, rsh         start a remote shell\n</i>\n<I+4>\ninfo, i             show information about the remote server\nlist                list the sharings of the remote server\nping                test the connection with the remote server</i></a></a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                               <A> # alignment\n<b>-d</b>, <b>--discover-port</b>  <u>port</u>      port used for broadcast discovery messages\n<b>-h</b>, <b>--help</b>                     show this help\n<b>--no-color</b>                     don't print ANSI escape characters\n<b>-t</b>, <b>--trace</b>  <u>0_or_1</u>            enable/disable tracing\n<b>-v</b>, <b>--verbose</b>  <u>level</u>           set verbosity level\n<b>-V</b>, <b>--version</b>                  show the easyshare version\n<b>-w</b>, <b>--discover-wait</b>  <u>seconds</u>   time to wait for discovery responses</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. Start the interactive shell (from which you can use any command)</a>\n<b>es</b>\n   <a>\n2. Scan the network for easyshare sharings</a>\n<b>es</b> <u>scan</u>\n<b>alice-arch (192.168.1.105:12020)</b>\n  DIRECTORIES\n  - shared\n  - tmp\n   <a>\n3. Get the content of a known sharing</a>\n<b>es</b> <u>get shared</u>\nGET shared/f1    [===================] 100%  745KB/745KB\nGET outcome: OK\nFiles        1  (745KB)\nTime         1s\nAvg. speed   1MB/s</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nSEE THE MAN PAGE FOR MORE INFO AND EXAMPLES</a></i4>",
   "esd": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nesd - server of the easyshare application</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nesd <A> # just for alignment\n<b>esd</b> [<u>OPTION</u>]... [<u>SHARING</u> [<u>SHARING_NAME</u>] [<u>SHARING_OPTION</u>]...]</a></a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nServer of the easyshare network application.\n\nFiles and directories can be shared in one of the following manners:\n   <A>\n1. By providing the path of the file/directory to share in the command line as <u>SHARING</u> \n2. By creating a configuration file and specifying it with the option <b>-c</b> <u>config</u>\n</A>\n\nThe option 1. should be preferred for an easy one-shot sharing of a file or directory, since doesn't need the creation a configuration file, but has the limit that only a file or folder can be shared (unless the option -s is used before each sharing path (and eventually name or options).\n\nIf given, <u>SHARING</u> must be a valid path to a local file or directory.\n<u>SHARING_NAME</u> is an optional name to assign to the sharing, as it will be seen by clients. If not given, the name of the file/directory is used instead.\nCurrently the only supported <u>SHARING_OPTION</u> is the read-only flag, which can be enabled with <b>-r</b>, and denies any write operation on a directory sharing.\n\nThe server can be configured either with a configuration file (2.) or by giving <b>esd</b> the options you need. The command line arguments have precedence over the corresponding setting of the configuration file (i.e. if you specify an option in both the configuration file and as an argument, the argument will be taken into account).\n\nThe configuration file is composed of two parts.\n   <A>\n1. Global section\n2. Sharings sections\n</A>\n\nEach line of a section has the form <u><key></u>=<u><value></u>.\nThe available <u><key></u> of the global section are:\n<I+4>\n<b>address</b>\n<b>discover_port</b>\n<b>name</b>\n<b>no_color</b>\n<b>password</b>\n<b>port</b>\n<b>rexec</b>\n<b>ssl</b>\n<b>ssl_cert</b>\n<b>ssl_privkey</b>\n<b>trace</b>\n<b>verbose</b>\n</I>\n\nThe available <u><key></u> of the sharings sections are:\n<I+4>\n<b>path</b>\n<b>readonly</b>\n</I>\n\nThe first lines of the configuration file belongs to the global section by default.\nEach sharing section begins with \"[<u>SHARING_NAME</u>]\".\nIf you omit the <u>SHARING_NAME</u>, the name of the shared file or directory will be used instead.\n\nSee the section <b>EXAMPLES</b> for an example of a configuration file.\n\nYou might consider using <b>es-tools</b> for some facilities, such as:\n  <A>\n- Create a default configuration file\n- Create a secure hash of a password, useful for avoid to give a plain password to <b>esd</b>.</a></a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                                                <A> # alignment\n<b>-a</b>, <b>--address</b>  <u>address</u>                          server address (default is primary interface)\n<b>-c</b>, <b>--config</b>  <u>config_path</u>                       load settings from a server configuration file\n<b>-d</b>, <b>--discover-port</b>  <u>port</u>                       port used to listen to discovery messages; 1 disables discovery (default is 12021)\n<b>-e</b>, <b>--rexec</b>                                     enable rexec (remote execution)\n<b>-h</b>, <b>--help</b>                                      show this help\n<b>-n</b>, <b>--name</b>  <u>name</u>                                server name (default is server hostname)\n<b>--no-color</b>                                      don't print ANSI escape characters\n<b>-P</b>, <b>--password</b>  <u>password</u>                        server password, plain or hashed with es-tools\n<b>-p</b>, <b>--port</b>  <u>port</u>                                server port (default is 12020)\n<b>-s</b>, <b>--sharing</b>  <u>sh_path</u> <u>[sh_name]</u> <u>[sh_options]</u>   sharing to serve\n<b>--ssl-cert</b>  <u>cert_path</u>                           path to an SSL certificate\n<b>--ssl-privkey</b>  <u>privkey_path</u>                     path to an SSL private key\n<b>-t</b>, <b>--trace</b>  <u>0_or_1</u>                             enable/disable tracing\n<b>-v</b>, <b>--verbose</b>  <u>level</u>                            set verbosity level\n<b>-V</b>, <b>--version</b>                                   show the easyshare version</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. Share a file</a>\n<b>esd</b> <u>/tmp/file</u>\n   <a>\n2. Share a directory, assigning it a name</a>\n<b>esd</b> <u>/tmp/shared_directory</u> <u>shared</u>\n   <a>\n3. Share multiples directories, one as read only</a>\n<b>esd</b> <b>-s</b> <u>/home/user</u> <u>-r</u> <b>-s</b> <u>/tmp</u> <u>temp</u>\n\n3. Share multiples directories, with a configuration file</a>\n<b>esd</b> <b>-c</b> <u>/home/user/.easyshare/esd.conf</u>\n\nConfiguration file example (esd.conf):\n\n# ===== SERVER SETTINGS =====\n\nname=stefano-arch\npassword=aSecurePassword\n\nport=12020\ndiscover_port=12019\n\nssl=true\nssl_cert=\"/tmp/cert.pem\"\nssl_privkey=\"/tmp/privkey.pem\"\nssl_privkey=\"/tmp/privkey.pem\"\n\nrexec=false\n\nverbose=4\ntrace=1\n\n# ===== SHARINGS =====\n\n[download]\n<I+4>\npath=\"/home/stefano/Downloads\"\n</i>\n[shared]\n<I+4>\npath=\"/tmp/shared\"\nreadonly=true\n</i>\n# Automatic sharing name\n[]\n<I+4>\npath=\"/tmp/afile\"</i></a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nSEE THE MAN PAGE FOR MORE INFO AND EXAMPLES</a></i4>",
   "es-tools": "<b>COMMAND</b>\n<I4>\n<A> # alignment\nes-tools - tools for administrators of easyshare servers</a></i4>\n\n<b>SYNOPSIS</b>\n<I4>\n<A> # alignment\nes-tools <A> # just for alignment\n<b>es-tools</b> [<u>OPTION</u>]...</a></i4>\n\n<b>DESCRIPTION</b>\n<I4>\n<A> # alignment\nCollection of tools for administrators of easyshare servers.\n\nIf neither <b>-c</b> nor <b>-p</b> is given, an interactive script is started and you will be asked what to do.</a></i4>\n\n<b>OPTIONS</b>\n<I4>\n                                <A> # alignment\n<b>-c</b>, <b>--generate-config</b>           generate default esd.conf file\n<b>-h</b>, <b>--help</b>                      show this help\n<b>-p</b>, <b>--hash-password</b>  <u>password</u>   generate an hash of the password\n<b>-V</b>, <b>--version</b>                   show the easyshare version</a></i4>\n\n<b>EXAMPLES</b>\n<I4>\n<A> # alignment\nUsage example:\n   <a>\n1. Generate a default config file</a>\n<b>es-tools</b> <b>-c</b> > /tmp/esd.conf\n   <a>\n2. Create a secure hash of a password</a>\n<b>es-tools</b> <b>-p</b> <u>aSecurePassword</u>\n   <a>\n3. Start the interactive script</a>\n<b>es-tools</b>\nWhat do you want to do?\n1. Generate an hash of a password (hash)\n2. Generate the default server configuration file\n3. Generate a self signed SSL certificate</a></i4>\n\n<b>SEE ALSO</b>\n<I4>\n<A> # alignment\nSEE THE MAN PAGE FOR MORE INFO AND EXAMPLES</a></i4>",
   "usage": "Type <b>es<b> <u>--help</u> for see <b>es</b> usage and options.\nType <b>help <u>command</u> for the full documentation of a <u>command</u>.\n\nAvailable commands are:     \n                    <a>\n<I+4>\n                    <A>\nhelp                show this help\nexit, quit, q       exit from the interactive shell\ntrace, t            enable/disable packet tracing\nverbose, v          change verbosity level\n</i>\n<I+4>\nscan, s             scan the network for easyshare servers\nconnect, c          connect to a remote server\ndisconnect          disconnect from a remote server\nopen, o             open a remote sharing (eventually discovering it)\nclose               close the remote sharing\n</i>\n<I+4>\nget, g              get files and directories from the remote sharing\nput, p              put files and directories in the remote sharing\n</i>\n<I+4>\npwd                 show the name of current local working directory\nls                  list local directory content\nl                   alias for ls -la\ntree                list local directory contents in a tree-like format\ncd                  change local working directory\nmkdir               create a local directory\ncp                  copy files and directories locally\nmv                  move files and directories locally\nrm                  remove files and directories locally\nfind                search for local files\nexec, :             execute an arbitrary command locally\nshell, sh           start a local shell\n</i>\n<I+4>\nrpwd                show the name of current remote working directory\nrls                 list remote directory content\nrl                  alias for rls -la\nrtree               list remote directory contents in a tree-like format\nrcd                 change remote working directory\nrmkdir              create a remote directory\nrcp                 copy files and directories remotely\nrmv                 move files and directories remotely\nrrm                 remove files and directories remotely\nrfind               search for local files\nrexec, ::           execute an arbitrary command remotely\nrshell, rsh         start a remote shell\n</i>\n<I+4>\ninfo, i             show information about the remote server\nlist                list the sharings of the remote server\nping                test the connection with the remote server</i></a>"
}
