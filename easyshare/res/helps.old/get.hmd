**COMMAND**
    get - get files and directories from the remote sharing

**SYNOPSIS**
    **get** [*OPTION*]... [*REMOTE_FILE*]...

    **get** [*OPTION*]... [*SHARING_LOCATION*] [*REMOTE_FILE*]...

    *SHARING_LOCATION* must be specified if and only if not already connected to \
    a remote server. In that case the connection will be established before \
    execute the command, as "**connect** *SHARING_LOCATION*" would do.

    Type "**help** **connect**" for more information about *SHARING_LOCATION* format.

**DESCRIPTION**
    Get files and directories from a remote sharing to the local machine.

    This command can be used for two similar purpose:
.A     .
    1. Download either files or directory from a "directory sharing"
    2. Download a "file sharing" (i.e. a single file with a sharing name assigned to it).
./A

    In case 1. a connection to the remote sharing have to be established in \
    one of the following manners:
.A      .
    1a. Create a connection to the sharing with connect and/or open
    1b. Provide a SHARING_LOCATION to the get command (e.g. get alice-arch temp)
./A

    If execute while connected to a "directory sharing" (1.) the following \
    rules are applied:
.A    .
    - If *REMOTE_FILE*s arguments are given, then the specified remote files are 
      downloaded into the local directory
    - If no *REMOTE_FILE* argument is given, then the entire sharing is downloaded \
    into the local directory within a folder that has he same name as the sharing
    - If *REMOTE_FILE* is "\*", then the entire sharing is downloaded into the local \
    directory (without wrapping it into a folder)
./A

    For download a "file sharing" (2.), **get** must be used in the form \
    "**get** [*SHARING_LOCATION*]" (e.g. get alice-arch file) and there is no \
    need to **open** the sharing before (since it's a file), as in case 1. 

    *REMOTE_FILE* can be:
.A    .
    - a path relative to the current remote working directory \
    (**rpwd**), (e.g. afile, adir/afile)
    - a path absolute with respect to the sharing root, \
    which is defined by a leading slash (e.g. /f1)
./A

    The files will be placed into the current local directory (which can be \
    changed with **cd**, inside or outside **es** shell).

    Directories are automatically downloaded recursively.

    If a remote file has the same name of a local file, you will be asked \
    whether overwrite it or not. The default overwrite behaviour can be specified \
    with the options **-y** (yes), **-n** (no), **-N** (overwrite if newer) and **-S** \
    (overwrite if size is different).

**OPTIONS**
    **-c**, **--check**
        Performs a check of files consistency
        
    **-h**, **--no-hidden**
        Doesn't copy hidden files
        
    **-N**, **--overwrite-newer**
        Overwrite files only if newer
        
    **-n**, **--overwrite-no**
        Never overwrite files
        
    **-p**, -**-preview**
        Do not transfer, just show a preview of what will happen
        
    **-q**, **--quiet**
        Doesn't show progress
        
    **-S**, **--overwrite-diff-size**
        Overwrite files only if size is different
        
    **-s**, **--sync**
        Synchronize (same as -N but remove old files)
        
    **-y**, **--overwrite-yes**
        Always overwrite files

**EXAMPLES**
.A     .
    1. Get all the content of a directory sharing (wrapped into a folder)
./A
        **/tmp>** connect alice-arch
        **alice-arch - /tmp>** open shared
        **alice-arch.shared:/ - /tmp>** tree
        |-- f1
        +-- f2
        **alice-arch.shared:/ - /tmp>** rls
        f_remote_1
        **alice-arch.shared:/ - /tmp> get**
        GET shared/f_remote_1    [===================] 100%  745KB/745KB
        GET outcome: OK
        Files        1  (745KB)
        Time         1s
        Avg. speed   1MB/s
        **alice-arch.shared:/ - /tmp>** tree
        |-- f1
        |-- f2
        +-- shared
            +-- f_remote_1

.A     .
    2. Get all the content of a directory sharing (into the current directory)
./A
        **/tmp>** connect alice-arch
        **alice-arch - /tmp>** open shared
        **alice-arch.shared:/ - /tmp>** tree
        |-- f1
        +-- f2
        **alice-arch.shared:/ - /tmp>** rls
        f_remote_1
        **alice-arch.shared:/ - /tmp>** **get** *\**
        GET f_remote_1    [===================] 100%  745KB/745KB
        GET outcome: OK
        Files        1  (745KB)
        Time         1s
        Avg. speed   1MB/s
        **alice-arch.shared:/ - /tmp>** tree
        |-- f1
        |-- f2
        +-- f_remote_1

.A     .
    3. Get specific files from a directory sharing
./A
        **/tmp>** connect alice-arch
        **alice-arch - /tmp>** open shared
        **alice-arch.shared:/ - /tmp>** tree
        |-- f1
        +-- f2
        **alice-arch.shared:/ - /tmp>** rls
        f_remote_1      f_remote_2      f_remote_another
        **alice-arch.shared:/ - /tmp> get** *f_remote_1* *f_remote_2*
        GET f_remote_1    [===================] 100%  745KB/745KB
        GET f_remote_2    [===================] 100%  745KB/745KB
        GET outcome: OK
        Files        2  (1.4MB)
        Time         1s
        Avg. speed   1MB/s
        **alice-arch.shared:/ - /tmp>** tree
        |-- f1
        |-- f2
        |-- f_remote_1
        +-- f_remote_2

.A     .
    4. Get without establish a connection before
./A
        **/tmp>** tree
        |-- f1
        +-- f2
        **/tmp> get** *shared*
        GET f_remote_1    [===================] 100%  745KB/745KB
        GET outcome: OK
        Files        1  (745KB)
        Time         1s
        Avg. speed   1MB/s
        **/tmp>** tree
        |-- f1
        |-- f2
        +-- shared
            +-- f_remote_1

.A     .
    5. Get a file sharing (without establish a connection before)
./A
        **/tmp>** tree
        |-- f1
        +-- f2
        **/tmp> get** *f_share*
        GET f_share    [===================] 100%  745KB/745KB
        GET outcome: OK
        Files        1  (745KB)
        Time         1s
        Avg. speed   1MB/s
        **/tmp>** tree
        |-- f1
        |-- f2
        +-- f_share

**SEE ALSO**
    **open**, **put**